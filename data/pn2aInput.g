#Petri net for Case 2a from Tyson et al. (2003)
#Rates: k[j] = (1, 10, 0.01, 0.01, 10, 0.1, 1, 0.2, 0.01, 0.01, 10, 0.1, 1, 0.05)
petrinet := rec(   
inputs := [[0,1,1,0,0,0,0,0,0,0,0,0,0,0],
           [0,0,1,0,0,0,0,0,0,0,0,0,0,0],
           [0,0,0,1,1,0,0,0,0,0,0,0,0,0],
           [0,0,0,0,0,1,0,0,1,0,0,0,0,0],
           [0,0,0,0,0,1,0,0,0,0,0,0,0,0],
           [0,0,0,0,0,0,1,1,0,0,0,0,0,0],
           [0,0,0,0,0,0,0,0,1,0,0,0,0,0],
           [0,0,0,0,0,0,0,0,0,1,1,0,0,0],
           [0,1,0,0,0,0,0,0,0,0,0,1,0,0],
           [0,0,0,0,0,0,0,0,0,0,0,1,0,0],
           [0,0,0,0,0,0,0,0,0,0,0,0,1,1]
          ],
outputs := [[1,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,1,0,0],
            [0,0,1,0,0,0,0,0,0,0,0],
            [1,1,0,0,0,0,0,0,0,0,0],
            [1,0,0,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,1,0,0,0,0,0],
            [0,0,0,1,1,0,0,0,0,0,0],
            [0,1,0,0,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,0,0,0],
            [0,0,0,1,0,0,1,0,0,0,0],
            [0,0,0,1,0,0,0,0,1,0,0],
            [0,0,0,0,0,0,0,0,0,0,1],
            [0,0,0,0,0,0,0,0,1,1,0],
            [0,0,0,0,0,0,1,0,0,1,0]
           ],
inhibcons := [[0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,0,0,0,0,0]
             ],
capacity := [1,1,1,1,1,1,1,1,1,1,1],
initial := [[  1,  0,  0,  1,  1,  0,  0,  0,  1,  1,  0]]
);

#initial := []
#initial :=  [[  5,  0,  0, 10,  1,  0,  0,  3,  5,  3,  0]]

gen := DumpPetriNet(petrinet,"pn2aInput",StrictFiringPreCondition,StrictFiringPostCondition,false);
SgpDecFiniteSetDisplayOn();

S := Semigroup(gen);
deg := DegreeOfTransformationSemigroup(S);
Print("\nDegree of ts:\n",deg,"\n");
Splash(DotSemigroupAction(S,[1..deg],\^));

sk := Skeleton(S);
Print("\nHolonomy Components:\n");
DisplayHolonomyComponents(sk);


#Splash(DotSkeleton(sk));
##SgpDecFiniteSetDisplayOn();
#simplereptile:=FiniteSet([2,4,5,7,8],8); 
#TilesOf(sk,reptile);
##SgpDecFiniteSetDisplayOff();
#NontrivialRoundTripWords(sk,reptile);

